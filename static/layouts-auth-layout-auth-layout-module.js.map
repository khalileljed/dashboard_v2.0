{"version":3,"sources":["./src/app/pages/register/register.component.html","./src/app/_services/auth.service.ts","./src/app/pages/login/login.component.ts","./src/app/layouts/auth-layout/auth-layout.routing.ts","./src/app/pages/register/register.component.scss","./src/app/pages/login/login.component.scss","./src/app/layouts/auth-layout/auth-layout.module.ts","./src/app/pages/register/register.component.ts","./src/app/pages/login/login.component.html"],"names":[],"mappings":"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","file":"layouts-auth-layout-auth-layout-module.js","sourcesContent":["export default \"<div class=\\\"header bg-gradient-danger py-7 py-lg-8\\\">\\n  <div class=\\\"separator separator-bottom separator-skew zindex-100\\\">\\n    <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n      <polygon class=\\\"fill-default\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\n    </svg>\\n  </div>\\n</div>\\n<div class=\\\"container mt--8 pb-5\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-6 col-md-8\\\">\\n      <div class=\\\"card bg-secondary shadow border-0\\\">\\n        <div class=\\\"card-body px-lg-5 py-lg-5\\\">\\n          <div class=\\\"text-center text-muted mb-4\\\">\\n            <small>Sign up with credentials</small>\\n          </div>\\n          <form\\n          *ngIf=\\\"!isSuccessful\\\"\\n          name=\\\"form\\\"\\n          (ngSubmit)=\\\"f.form.valid && onSubmit()\\\"\\n          #f=\\\"ngForm\\\"\\n          novalidate>\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-hat-3\\\"></i></span>\\n                </div>\\n                <input class=\\\"form-control\\\" placeholder=\\\"UserName\\\" type=\\\"text\\\"\\n                name=\\\"username\\\"\\n                [(ngModel)]=\\\"form.username\\\"\\n                required\\n                minlength=\\\"3\\\"\\n                maxlength=\\\"20\\\"\\n                #username=\\\"ngModel\\\"/>\\n              </div>\\n              <div class=\\\"alert-danger\\\" *ngIf=\\\"username.errors && f.submitted\\\">\\n                <div *ngIf=\\\"username.errors.required\\\">Username is required</div>\\n                <div *ngIf=\\\"username.errors.minlength\\\">\\n                  Username must be at least 3 characters\\n                </div>\\n                <div *ngIf=\\\"username.errors.maxlength\\\">\\n                  Username must be at most 20 characters\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-email-83\\\"></i></span>\\n                </div>\\n                <input class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\"\\n                name=\\\"email\\\"\\n                [(ngModel)]=\\\"form.email\\\"\\n                required\\n                email\\n                #email=\\\"ngModel\\\"/>\\n              </div>\\n              <div class=\\\"alert-danger\\\" *ngIf=\\\"email.errors && f.submitted\\\">\\n                <div *ngIf=\\\"email.errors.required\\\">Email is required</div>\\n                <div *ngIf=\\\"email.errors.email\\\">\\n                  Email must be a valid email address\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group input-group-alternative\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-lock-circle-open\\\"></i></span>\\n                </div>\\n                <input class=\\\"form-control\\\" placeholder=\\\"Password\\\" type=\\\"password\\\"\\n                name=\\\"password\\\"\\n                [(ngModel)]=\\\"form.password\\\"\\n                required\\n                minlength=\\\"6\\\"\\n                #password=\\\"ngModel\\\"/>\\n              </div>\\n              <div class=\\\"alert-danger\\\" *ngIf=\\\"password.errors && f.submitted\\\">\\n                <div *ngIf=\\\"password.errors.required\\\">Password is required</div>\\n                <div *ngIf=\\\"password.errors.minlength\\\">\\n                  Password must be at least 6 characters\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"text-muted font-italic\\\"><small>password strength: <span class=\\\"text-success font-weight-700\\\">at least 6 characters</span></small></div>\\n            <div class=\\\"row my-4\\\">\\n              <div class=\\\"col-12\\\">\\n                <div class=\\\"custom-control custom-control-alternative custom-checkbox\\\">\\n                  <input class=\\\"custom-control-input\\\" id=\\\"customCheckRegister\\\" type=\\\"checkbox\\\">\\n                  <label class=\\\"custom-control-label\\\" for=\\\"customCheckRegister\\\">\\n                    <span class=\\\"text-muted\\\">I agree with the <a href=\\\"#!\\\">Privacy Policy</a></span>\\n                  </label>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <button class=\\\"btn btn-primary btn-block\\\">Sign Up</button>\\n            </div>\\n            <div class=\\\"alert alert-warning\\\" *ngIf=\\\"f.submitted && isSignUpFailed\\\">\\n              Signup failed!<br />{{ errorMessage }}\\n            </div>\\n          </form>\\n          <div class=\\\"alert alert-success\\\" *ngIf=\\\"isSuccessful\\\">\\n            Your registration is successful!\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nconst AUTH_API = 'http://localhost:8080/api/auth/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private http: HttpClient) { }\n\n  login(username: string, password: string): Observable<any> {\n    return this.http.post(AUTH_API + 'signin', {\n      username,\n      password\n    }, httpOptions);\n  }\n\n  register(username: string, email: string, password: string): Observable<any> {\n    return this.http.post(AUTH_API + 'signup', {\n      username,\n      email,\n      password\n    }, httpOptions);\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../_services/auth.service';\nimport { TokenStorageService } from '../../_services/token-storage.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  form: any = {\n    username: null,\n    password: null\n  };\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n\n  constructor(private authService: AuthService, private tokenStorage: TokenStorageService) {}\n\n  ngOnInit(): void {\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getUser().roles;\n    }\n  }\n\n  onSubmit(): void {\n    const { username, password } = this.form;\n\n    this.authService.login(username, password).subscribe(\n      data => {\n        this.tokenStorage.saveToken(data.accessToken);\n        this.tokenStorage.saveUser(data);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getUser().roles;\n        this.reloadPage();\n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      }\n    );\n  }\n\n  reloadPage(): void {\n    window.location.reload();\n  }\n\n}\n","import { Routes } from '@angular/router';\n\nimport { LoginComponent } from '../../pages/login/login.component';\nimport { RegisterComponent } from '../../pages/register/register.component';\n\nexport const AuthLayoutRoutes: Routes = [\n    { path: 'login',          component: LoginComponent },\n    { path: 'register',       component: RegisterComponent }\n];\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AuthLayoutRoutes } from './auth-layout.routing';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { LoginComponent } from '../../pages/login/login.component';\nimport { RegisterComponent } from '../../pages/register/register.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(AuthLayoutRoutes),\n    FormsModule\n    // NgbModule\n  ],\n  declarations: [\n    LoginComponent,\n    RegisterComponent\n  ]\n})\nexport class AuthLayoutModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../_services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  form: any = {\n    username: null,\n    email: null,\n    password: null\n  };\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(): void {\n    const { username, email, password } = this.form;\n\n    this.authService.register(username, email, password).subscribe(\n      data => {\n        console.log(data);\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isSignUpFailed = true;\n      }\n    );\n  }\n\n}\n","export default \"<div class=\\\"header bg-gradient-danger py-7 py-lg-8\\\">\\n  <div class=\\\"separator separator-bottom separator-skew zindex-100\\\">\\n    <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n      <polygon class=\\\"fill-default\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\n    </svg>\\n  </div>\\n</div>\\n<div class=\\\"container mt--8 pb-5\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-5 col-md-7\\\">\\n      <div class=\\\"card bg-secondary shadow border-0\\\">\\n        <div class=\\\"card-body px-lg-5 py-lg-5\\\">\\n          <div class=\\\"text-center text-muted mb-4\\\">\\n            <small>Sign in with your credentials</small>\\n          </div>\\n          <form role=\\\"form\\\"\\n          *ngIf=\\\"!isLoggedIn\\\"\\n          name=\\\"form\\\"\\n          (ngSubmit)=\\\"f.form.valid && onSubmit()\\\"\\n          #f=\\\"ngForm\\\"\\n          novalidate>\\n            <div class=\\\"form-group mb-3\\\">\\n              <div class=\\\"input-group input-group-alternative\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-email-83\\\"></i></span>\\n                </div>\\n                <input class=\\\"form-control\\\" placeholder=\\\"Username\\\" type=\\\"text\\\" name=\\\"username\\\"\\n                [(ngModel)]=\\\"form.username\\\"\\n                required\\n                #username=\\\"ngModel\\\" />\\n              </div>\\n              <div\\n              class=\\\"alert alert-danger\\\"\\n              role=\\\"alert\\\"\\n              *ngIf=\\\"username.errors && f.submitted\\\"\\n              >\\n              Username is required !!\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"input-group input-group-alternative\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-lock-circle-open\\\"></i></span>\\n                </div>\\n                <input class=\\\"form-control\\\" placeholder=\\\"Password\\\" type=\\\"password\\\"\\n                name=\\\"password\\\"\\n                [(ngModel)]=\\\"form.password\\\"\\n                required\\n                minlength=\\\"6\\\"\\n                #password=\\\"ngModel\\\"/>\\n              </div>\\n            </div>\\n            <div\\n            class=\\\"alert alert-danger\\\"\\n            role=\\\"alert\\\"\\n            *ngIf=\\\"password.errors && f.submitted\\\"\\n            >\\n            <div *ngIf=\\\"password.errors.required\\\">Password is required !!</div>\\n            <div *ngIf=\\\"password.errors.minlength\\\">\\n            Password must be at least 6 characters\\n            </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <button class=\\\"btn btn-primary btn-block\\\">Sign in</button>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <div\\n                class=\\\"alert alert-danger\\\"\\n                role=\\\"alert\\\"\\n                *ngIf=\\\"f.submitted && isLoginFailed\\\"\\n              >\\n                Login failed: {{ errorMessage }}\\n              </div>\\n            </div>\\n          </form>\\n          <div class=\\\"alert alert-success\\\" *ngIf=\\\"isLoggedIn\\\">\\n            Logged in as {{ roles }}.\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n\";"],"sourceRoot":"webpack:///"}